@using BerberKuaforRandevu.Dto.Kuafor
@model KuaforDuzenleDto

@{
    ViewBag.Title = "Kuaför Düzenle";
    var yetenekler = ViewBag.Yetenekler as List<Yetenek>;
    var mevcutYetenekler = Model.Yetenekler;
    var mevcutUzmanliklar = Model.Uzmanliklar;
}

<h2>Kuaför Düzenle</h2>
<hr />

<form id="kuaforForm">

    <input type="hidden" asp-for="Id" />

    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-center mb-4">
        <div class="col-md-5 text-center justify-content-center">
            <label for="photoUpload" class="form-label">Fotoğraf Yükle</label>
            <input type="file" id="photoUpload" class="form-control" accept="image/*" />
            <div class="mt-3" id="photoPreviewContainer">
                <img id="photoPreview" src="@(Url.Action("GetPhoto", "Kuafor", new { id = Model.Id }))" alt="Fotoğraf Önizleme" class="img-fluid" style="max-width: 100%; max-height: 300px; display: block;" />
            </div>
            <button type="button" class="btn btn-danger mt-2" id="cancelPhotoButton">Fotoğrafı İptal Et</button>
        </div>
    </div>


    <div class="row g-3">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Ad" class="control-label"></label>
                <input asp-for="Ad" class="form-control" />
                <span asp-validation-for="Ad" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Soyad" class="control-label"></label>
                <input asp-for="Soyad" class="form-control" />
                <span asp-validation-for="Soyad" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row g-3">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="Sifre" class="control-label"></label>
                <input asp-for="Sifre" type="password" class="form-control" placeholder="Güncellemek istemiyorsanız boş bırakın." />
                <span asp-validation-for="Sifre" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row g-3">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="MesaiBaslangic" class="control-label">Mesai Başlangıç</label>
                <input asp-for="MesaiBaslangic" class="form-control" type="time" />
                <span asp-validation-for="MesaiBaslangic" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="MesaiBitis" class="control-label">Mesai Bitiş</label>
                <input asp-for="MesaiBitis" class="form-control" type="time" />
                <span asp-validation-for="MesaiBitis" class="text-danger"></span>
            </div>
        </div>
    </div>
</form>

<h3 class="mt-4">Kuaförün yeteneklerini seç.</h3>

<div class="row mt-3">
    <div class="col-md-6">
        <h4>Yetenekler</h4>
        <div class="d-flex flex-wrap gap-2" id="yetenekler">
            @if (yetenekler == null)
            {
                <span>Salonunuzda hiçbir yetenek yok. Yetenekler sayfasından yetenek ekleyin.</span>
            }
            else
            {
                @foreach (var yetenek in yetenekler)
                {
                    <div class="yetenek-kart p-2 border rounded
                        @(mevcutYetenekler.Contains(yetenek.Id) ? "selected" : "")"
                    data-id="@yetenek.Id"
                    onclick="yetenekSec(this)">
                        @yetenek.Ad
                    </div>
                }
            }
        </div>
    </div>

    <div class="col-md-6 mt-3 mt-md-0"> 
        <h4>Uzmanlıklar</h4> 
        <div class="d-flex flex-wrap gap-2" id="uzmanliklar"> 
            @if(yetenekler == null)
            {
                <span>Salonunuzda hiçbir yetenek yok. Yetenekler sayfasından yetenek ekleyin.</span>
            }
            else 
            {
                @foreach (var yetenek in yetenekler)
                {
                    if (mevcutUzmanliklar.Contains(yetenek.Id))
                    {
                        <div class="yetenek-kart p-2 border rounded selected"
                            data-id="@yetenek.Id"
                            onclick="uzmanlikSec(this)">
                            @yetenek.Ad
                        </div>
                    }
                    else if(mevcutYetenekler.Contains(yetenek.Id))
                    {
                        <div class="yetenek-kart p-2 border rounded"
                             data-id="@yetenek.Id"
                             onclick="uzmanlikSec(this)">
                            @yetenek.Ad
                        </div>
                    }
                }
           }
        </div> 
    </div>

</div>

<div class="form-group justify-content-start">
    <button id="submitButton" type="button" class="btn btn-success mt-3">Kaydet</button>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }



    <script>

        window.addEventListener('load', () => {
            const cancelPhotoButton = document.getElementById('cancelPhotoButton');
            cancelPhotoButton.style.display = 'none';
        });


        let originalPhoto = document.getElementById('photoPreview').src;

        document.getElementById('photoUpload').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const reader = new FileReader();
            const photoPreview = document.getElementById('photoPreview');
            const cancelPhotoButton = document.getElementById('cancelPhotoButton');

            reader.onload = function(e) {
                photoPreview.src = e.target.result;
                photoPreview.style.display = 'block';
                cancelPhotoButton.style.display = 'block';
            }

            reader.readAsDataURL(file);
        });


        document.getElementById('cancelPhotoButton').addEventListener('click', function() {
            const photoPreview = document.getElementById('photoPreview');
            const photoUpload = document.getElementById('photoUpload');
            const cancelPhotoButton = document.getElementById('cancelPhotoButton');

            photoPreview.src = originalPhoto;
            photoUpload.value = '';
            cancelPhotoButton.style.display = 'none';
        });


        function yetenekSec(element) {
            const yetenekId = parseInt(element.getAttribute('data-id'));

            if (element.classList.contains('selected')) {
                element.classList.remove('selected');
                uzmanlikKartiKaldir(yetenekId);
            } else {
                element.classList.add('selected');
                uzmanlikKartiEkle(yetenekId, element.innerText);
            }
        }

        function uzmanlikKartiEkle(yetenekId, yetenekAdi) {
            const container = document.getElementById('uzmanliklar');
            const uzmanlikElementi = document.createElement('div');
            uzmanlikElementi.className = 'yetenek-kart p-2 border rounded';
            uzmanlikElementi.setAttribute('data-id', yetenekId);
            uzmanlikElementi.innerText = yetenekAdi;
            uzmanlikElementi.onclick = () => uzmanlikSec(uzmanlikElementi);
            container.appendChild(uzmanlikElementi);
        }

        function uzmanlikKartiKaldir(yetenekId) {
            const container = document.getElementById('uzmanliklar');
            const uzmanlikElementi = container.querySelector(`div[data-id='${yetenekId}']`);
            if (uzmanlikElementi) {
                container.removeChild(uzmanlikElementi);
            }
        }

        function uzmanlikSec(element) {
            if (element.classList.contains('selected')) {
                element.classList.remove('selected');
            } else {
                element.classList.add('selected');
            }
        }

        document.getElementById('submitButton').addEventListener('click', async () => {
            const ad = document.querySelector('input[name="Ad"]').value;
            const soyad = document.querySelector('input[name="Soyad"]').value;
            const email = document.querySelector('input[name="Email"]').value;
            const sifre = document.querySelector('input[name="Sifre"]').value;
            const mesaiBaslangic = document.querySelector('input[name="MesaiBaslangic"]').value;
            const mesaiBitis = document.querySelector('input[name="MesaiBitis"]').value;
            const fileInput = document.getElementById('photoUpload');
            const file = fileInput.files[0];

            const yetenekler = [];
            document.querySelectorAll('#yetenekler .yetenek-kart.selected').forEach(element => {
                yetenekler.push(parseInt(element.getAttribute('data-id')));
            });

            const uzmanliklar = [];
            document.querySelectorAll('#uzmanliklar .yetenek-kart.selected').forEach(element => {
                uzmanliklar.push(parseInt(element.getAttribute('data-id')));
            });

            const formData = new FormData();
            formData.append('Ad', ad);
            formData.append('Soyad', soyad);
            formData.append('Email', email);
            if (sifre) {
                formData.append('Sifre', sifre);
            }
            formData.append('MesaiBaslangic', mesaiBaslangic);
            formData.append('MesaiBitis', mesaiBitis);
            if (file) {
                formData.append('Fotograf', file);
            }
            yetenekler.forEach((yetenek, index) => {
                formData.append(`Yetenekler[${index}]`, yetenek);
            });
            uzmanliklar.forEach((uzmanlik, index) => {
                formData.append(`Uzmanliklar[${index}]`, uzmanlik);
            });

            const kuaforId = document.querySelector('input[name="Id"]').value;

            const response = await fetch(`/Kuafor/Duzenle/${kuaforId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            });

            if (response.ok) {
                window.location.href = '/Kuafor/Index';
            } else {
                console.error('Kuaför güncellenirken hata oluştu.');
            }
        });

    </script>
}
